# Docker-specific Makefile without readline
NAME = minishell
CC = gcc
CFLAGS = -Werror -Wall -Wextra -Wpedantic -Wshadow -Wunused-parameter -Wunused-variable -Wunused-function -Wformat=2 -Wconversion -Wcast-align -Wcast-qual -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wmissing-declarations -Wredundant-decls -Wnested-externs

# Remove readline dependencies for Docker
LDFLAGS = -Llibs/Libft -lft
CPPFLAGS = -I./include

INCLUDE_DIR = ./include

MAIN = env_utils env_helpers file_utils global input_utils input_helpers main process_command process_command_helpers numeric_utils strarrutils termios_utils stubs wildcard_stubs signals status
CMD = cd cd_helpers cd_helpers2 cd_pwd echo env exec exec_error exec_helpers exec_proc exit exit_helpers2 exit_helpers3 export export_helpers export_helpers2 export_helpers3 export2 pwd unset unset_helpers unset_helpers2 exec_check_utils
PARSER =  escape_split expand_envvar get_length hash_handler is is2 is3 is4 parser parser_helpers parser_helpers2 prompt quote_check rm_quotes syntax syntax_helpers syntax_helpers2 syntax_helpers3 syntax_helpers4 wildcard_parser
REDIR = argu_cleanup cmd_redir exec_redir redir_helpers utils_redir utils_redir2 utils_redir3
PIPE = utils_pipe utils_pipe2 utils_pipe3 utils_pipe4

SRCS =	$(addsuffix .c, $(addprefix src/core/, $(MAIN))) \
		$(addsuffix .c, $(addprefix src/cmd/, $(CMD))) \
		$(addsuffix .c, $(addprefix src/parser/, $(PARSER))) \
		$(addsuffix .c, $(addprefix src/redirection/, $(REDIR))) \
		$(addsuffix .c, $(addprefix src/pipe/, $(PIPE)))

OBJS = $(SRCS:.c=.o)

all : $(NAME)

$(NAME) : $(OBJS)
	@make bonus -s -C libs/Libft
	$(CC) $(CFLAGS) $(LDFLAGS) $(OBJS) -o $(NAME)

%.o: %.c
	$(CC) $(CFLAGS) $(CPPFLAGS) -I$(INCLUDE_DIR) -c $< -o $@

clean :
	@make clean -s -C libs/Libft
	@rm -rf $(OBJS) "|" "<" ">" ">>" .temp asd echo grep la lol minishell.dSYM o out0 out1 tmp_*

debug : clean
	@make debug -s -C libs/Libft
	$(CC) $(CFLAGS) $(CPPFLAGS) -g -fsanitize=address $(LDFLAGS) $(SRCS) -o $(NAME)

fclean : clean
	@make fclean -s -C libs/Libft
	@rm -rf $(NAME)

re : fclean all

.PHONY : all, clean, debug, fclean, re,
